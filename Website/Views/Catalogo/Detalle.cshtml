@model TuProyecto.Models.Producto
@using System.Globalization; @* ¡Añadir esta línea al inicio del archivo! *@

@{
    ViewData["Title"] = Model.Nombre + " - Detalle";
    // Si la lista es nula o vacía, crea una lista con una imagen de placeholder para evitar errores.
    var imagenUrls = Model.ImagenUrls ?? new List<string> { "/images/placeholder.png" };
    var hasMultipleImages = imagenUrls.Count > 1; // Variable para simplificar las condiciones

    // 🔥 DEFINIMOS EL FORMATO DE MILES:
    var culturaMiles = CultureInfo.GetCultureInfo("es-ES");
}

<div class="container mt-5">
    <div class="row">

        <div class="col-md-6 mb-4">
            <div id="productGallery" class="carousel slide" data-bs-interval="false">

                <div class="carousel-inner border rounded shadow-sm">
                    @{
                        int i = 0;
                    }
                    @foreach (var url in imagenUrls)
                    {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <img src="@url" class="d-block w-100 product-main-image" alt="@Model.Nombre - Imagen @(i + 1)"
                                                  style="max-height: 400px; object-fit: contain; background-color: #f8f9fa;" />
                        </div>
                        i++;
                    }
                </div>

                @if (hasMultipleImages)
                {
                    <button class="carousel-control-prev" type="button" data-bs-target="#productGallery" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Anterior</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#productGallery" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Siguiente</span>
                    </button>
                }
            </div>

            @if (hasMultipleImages)
            {
                <div class="d-flex justify-content-center gap-2 mt-3">
                    @{
                        int j = 0;
                    }
                    @foreach (var url in imagenUrls)
                    {
                        <img src="@url" alt="Miniatura @(j + 1)"
                                            class="img-thumbnail rounded-3 p-1 @(j == 0 ? "border-primary border-2" : "")"
                                            data-bs-target="#productGallery" data-bs-slide-to="@j"
                                            style="width: 70px; height: 70px; object-fit: cover; cursor: pointer;" />
                        j++;
                    }
                </div>
            }
        </div>

        <div class="col-md-6 d-flex flex-column justify-content-start">
            <h2 class="mb-3">@Model.Nombre</h2>

            <h3 class="text-success fw-bold mb-4">
                Precio: $@Model.Precio.ToString("N0", culturaMiles) @* 🔥 CAMBIO: Usamos la cultura 'es-ES' para forzar los puntos *@
            </h3>

            <h4 class="mt-3">Descripción:</h4>
            <p class="text-light fs-6">@Model.Descripcion</p>

            @if (Model.SubFiltros != null && Model.SubFiltros.Any())
            {
                <div class="mb-3">
                    <span class="badge bg-primary me-2">Categoría: @Model.Categoria</span>
                    @foreach (var filtro in Model.SubFiltros)
                    {
                        <span class="badge bg-secondary me-2">@filtro</span>
                    }
                </div>
            }


            <div class="d-flex gap-2 mt-4">
                <a href="@Url.Action("Catalogo", "Catalogo")" class="btn btn-outline-secondary">
                    ← Volver al catálogo
                </a>

                <button type="button" class="btn btn-success add-to-cart"
                                    data-id="@Model.Id"
                                    data-nombre="@Model.Nombre"
                                    data-precio="@Model.Precio"
                                    data-imagen="@imagenUrls.FirstOrDefault()">
                    🛒 Añadir al carrito
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    // Script para manejar el borde activo en las miniaturas
    document.addEventListener('DOMContentLoaded', function () {
        var carousel = document.getElementById('productGallery');
        var thumbnails = document.querySelectorAll('[data-bs-slide-to]');

        if (carousel && thumbnails.length > 0) {
            carousel.addEventListener('slide.bs.carousel', function (event) {
                // Elimina la clase activa (borde) de todas las miniaturas
                thumbnails.forEach(thumb => {
                    thumb.classList.remove('border-primary', 'border-2');
                });

                // Añade la clase activa (borde) a la miniatura correspondiente
                var nextIndex = event.to;
                thumbnails[nextIndex].classList.add('border-primary', 'border-2');
            });
        }
    });
</script>